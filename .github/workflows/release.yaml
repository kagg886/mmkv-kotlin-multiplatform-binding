name: release.yaml
on:
  workflow_dispatch:
    inputs:
      RELEASE_LIB_CORE:
        description: 'Release Core Library'
        required: false
        default: false
        type: boolean
      RELEASE_LIB_CORE_EXT:
        description: 'Release Core Ext Library'
        required: false
        default: false
        type: boolean
      RELEASE_LIB_CORE_JAVA:
        description: 'Release Core Java Library'
        required: false
        default: false
        type: boolean
      RELEASE_LIB_PLATFORM_WINDOWS:
        description: 'Release JVM Windows Platform'
        required: false
        default: false
        type: boolean
      RELEASE_LIB_PLATFORM_LINUX:
        description: 'Release JVM Linux Platform'
        required: false
        default: false
        type: boolean
      RELEASE_LIB_PLATFORM_MACOS:
        description: 'Release JVM macOS Platform'
        required: false
        default: false
        type: boolean

      RELEASE_LIB_PLATFORM_ANDROID:
        description: 'Release Android Platform'
        required: false
        default: false
        type: boolean
      RELEASE_LIB_PLATFORM_IOS:
        description: 'Release iOS Platform'
        required: false
        default: false
        type: boolean
jobs:
  test-jvm-windows:
    if: ${{ inputs.RELEASE_LIB_PLATFORM_WINDOWS || inputs.RELEASE_LIB_CORE || inputs.RELEASE_LIB_CORE_JAVA }}
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base
        with:
          windows: 'true'

      - name: Run Test
        uses: ./.github/actions/test-jvm

  test-jvm-linux:
    if: ${{ inputs.RELEASE_LIB_PLATFORM_WINDOWS || inputs.RELEASE_LIB_CORE || inputs.RELEASE_LIB_CORE_JAVA }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Run Test
        uses: ./.github/actions/test-jvm

  test-jvm-macos:
    if: ${{ inputs.RELEASE_LIB_PLATFORM_MACOS || inputs.RELEASE_LIB_CORE || inputs.RELEASE_LIB_CORE_JAVA }}
    runs-on: macos-15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Run Test
        uses: ./.github/actions/test-jvm

  test-android:
    if: ${{ inputs.RELEASE_LIB_PLATFORM_ANDROID || inputs.RELEASE_LIB_CORE }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Run Test
        uses: ./.github/actions/test-android

  test-ios:
    if: ${{ inputs.RELEASE_LIB_PLATFORM_IOS || inputs.RELEASE_LIB_CORE }}
    runs-on: macos-15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Run Test
        uses: ./.github/actions/test-ios

  release-core:
    if: ${{ inputs.RELEASE_LIB_CORE }}
    needs:
      - test-jvm-windows
      - test-jvm-linux
      - test-jvm-macos
      - test-android
      - test-ios
    runs-on: macos-15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Publish
        run: ./gradlew :core:publishAndReleaseToMavenCentral
        env:
          org.gradle.configuration-cache: false
          SKIP_SIGN: false
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRETKEYRING }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

  release-core-ext:
    if: ${{ inputs.RELEASE_LIB_CORE_EXT }}
    needs:
      - test-jvm-windows
      - test-jvm-linux
      - test-jvm-macos
      - test-android
      - test-ios
    runs-on: macos-15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Publish
        run: ./gradlew :ext:publishAndReleaseToMavenCentral
        env:
          org.gradle.configuration-cache: false
          SKIP_SIGN: false
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRETKEYRING }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

  release-core-java:
    if: ${{ inputs.RELEASE_LIB_CORE_JAVA }}
    needs:
      - test-jvm-windows
      - test-jvm-linux
      - test-jvm-macos
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Publish
        run: ./gradlew :core-java:publishAndReleaseToMavenCentral
        env:
          org.gradle.configuration-cache: false
          SKIP_SIGN: false
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRETKEYRING }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

  release-platform-jvm-windows:
    if: ${{ inputs.RELEASE_LIB_PLATFORM_WINDOWS }}
    needs:
      - test-jvm-windows
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base
        with:
          windows: 'true'

      - name: Publish
        run: ./gradlew :platform:platform-windows:publishAndReleaseToMavenCentral
        env:
          org.gradle.configuration-cache: false
          SKIP_SIGN: false
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRETKEYRING }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

  release-platform-jvm-linux:
    if: ${{ inputs.RELEASE_LIB_PLATFORM_LINUX }}
    needs:
      - test-jvm-linux
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Publish
        run: ./gradlew :platform:platform-linux:publishAndReleaseToMavenCentral
        env:
          org.gradle.configuration-cache: false
          SKIP_SIGN: false
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRETKEYRING }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

  release-platform-jvm-macos:
    if: ${{ inputs.RELEASE_LIB_PLATFORM_MACOS }}
    needs:
      - test-jvm-macos
    runs-on: macos-15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Publish
        run: ./gradlew :platform:platform-macos:publishAndReleaseToMavenCentral
        env:
          org.gradle.configuration-cache: false
          SKIP_SIGN: false
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRETKEYRING }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

  release-platform-android:
    if: ${{ inputs.RELEASE_LIB_PLATFORM_ANDROID }}
    needs:
      - test-android
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Publish
        run: ./gradlew :platform:platform-android:publishAndReleaseToMavenCentral
        env:
          org.gradle.configuration-cache: false
          SKIP_SIGN: false
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRETKEYRING }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

  release-platform-ios:
    if: ${{ inputs.RELEASE_LIB_PLATFORM_IOS }}
    needs:
      - test-ios
    runs-on: macos-15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Publish
        run: ./gradlew :platform:platform-ios:publishAndReleaseToMavenCentral
        env:
          org.gradle.configuration-cache: false
          SKIP_SIGN: false
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRETKEYRING }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

  release-dokka:
    needs:
      - release-core
      - release-core-ext
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-base

      - name: Publish
        run: ./gradlew :dokkaGenerate

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: core/build/dokka/html

  publish:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs:
      - release-dokka
    runs-on: ubuntu-latest
    name: Deploy
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
